import java.io.*;import java.util.*;Â public class Main {    static class FastReader {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st;        String next() throws IOException {            while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());            return st.nextToken();        }        int nextInt() throws IOException { return Integer.parseInt(next()); }        long nextLong() throws IOException { return Long.parseLong(next()); }    }    public static void main(String[] args) throws Exception {        FastReader fr = new FastReader();        StringBuilder sb = new StringBuilder();        int t = fr.nextInt();        while (t-- > 0) {            int n = fr.nextInt();            long x = fr.nextLong();            TreeMap<Long, Integer> map = new TreeMap<>();            for (int i = 0; i < n; i++) {                long v = fr.nextLong();                map.put(v, map.getOrDefault(v, 0) + 1);            }            long rem = 0, bonus = 0;            ArrayList<Long> order = new ArrayList<>(n);            int left = n;            while (left > 0) {                long need = x - rem;                Long high = map.lastKey();                if (high >= need) {                    order.add(high);                    bonus += high;                    rem = rem + high - x;                    int c = map.get(high) - 1;                    if (c == 0) map.remove(high); else map.put(high, c);                    left--;                } else {                    Long low = map.firstKey();                    order.add(low);                    rem += low;                    int c = map.get(low) - 1;                    if (c == 0) map.remove(low); else map.put(low, c);                    left--;                }            }            sb.append(bonus).append('\n');            for (int i = 0; i < order.size(); i++) {                if (i > 0) sb.append(' ');                sb.append(order.get(i));            }            sb.append('\n');        }        System.out.print(sb.toString());    }}