import java.io.*;import java.util.*;Â public class Main {    static class Fast {        private final DataInputStream din = new DataInputStream(System.in);        private final byte[] buffer = new byte[1 << 16];        private int ptr, bytes;        private byte read() throws IOException {            if (ptr >= bytes) {                bytes = din.read(buffer, 0, buffer.length);                ptr = 0;                if (bytes == -1) return -1;            }            return buffer[ptr++];        }        int nextInt() throws IOException {            int c; do c = read(); while (c <= 32);            int s = 1; if (c == '-') { s = -1; c = read(); }            int x = 0; while (c > 32) { x = x * 10 + c - '0'; c = read(); }            return x * s;        }    }    public static void main(String[] args) throws Exception {        Fast fs = new Fast();        StringBuilder out = new StringBuilder();        int t = fs.nextInt();        while (t-- > 0) {            int n = fs.nextInt(), k = fs.nextInt();            HashSet<Integer> have = new HashSet<>();            int cntK = 0;            for (int i = 0; i < n; i++) {                int v = fs.nextInt();                if (v == k) cntK++;                else if (v >= 0 && v < k) have.add(v);            }            int miss = k - have.size();            int use = Math.min(cntK, miss);            long ans = (long)cntK + (miss - use);            out.append(ans).append('\n');        }        System.out.print(out.toString());    }}