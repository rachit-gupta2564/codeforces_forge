import java.io.*;import java.util.*; public class Main2Fixed {    static class Reader {        private final InputStream in;        private final byte[] buf = new byte[1 << 16];        private int i = 0, n = 0;        Reader(InputStream is){ in = is; }        private int g() throws IOException {            if (i >= n) { n = in.read(buf); i = 0; if (n <= 0) return -1; }            return buf[i++];        }        int nextInt() throws IOException {            int c, s = 1, x = 0;            do c = g(); while (c <= 32);            if (c == '-') { s = -1; c = g(); }            while (c > 32) { x = x * 10 + (c - '0'); c = g(); }            return x * s;        }    }     public static void main(String[] args) throws Exception {        Reader rd = new Reader(System.in);        StringBuilder out = new StringBuilder();        int t = rd.nextInt();        while (t-- > 0) {            int n = rd.nextInt();            int k = rd.nextInt();            int[] cnt = new int[n + 1];            for (int i = 0; i < n; i++) {                int x = rd.nextInt();                if (x <= n) cnt[x]++;            }            int[] pref = new int[n + 1];            for (int i = 1; i <= n; i++) pref[i] = pref[i - 1] + cnt[i];            int[] multAll = new int[n + 1];            for (int d = 1; d <= n; d++) {                for (int m = d; m <= n; m += d) multAll[d] += cnt[m];            }            int ans = 1;            for (int d = n; d >= 1; d--) {                int up = (int)Math.min((long)n, 4L * d - 1);                int total = pref[up];                int mult;                if (up == n) {                    mult = multAll[d];                } else {                    int a = d <= n ? cnt[d] : 0;                    int b = 2 * d <= n ? cnt[2 * d] : 0;                    int c = 3 * d <= n ? cnt[3 * d] : 0;                    mult = a + b + c;                }                int bad = total - mult;                if (bad <= k) { ans = d; break; }            }            out.append(ans).append('\n');        }        System.out.print(out);    }}